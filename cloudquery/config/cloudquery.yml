cloudquery:
    providers:
        - name: aws
          version: latest
        - name: azure
          version: latest
        - name: gcp
          version: latest
    connection:
        type: postgres
        username: cquser
        password: cqpass
        host: cq-postgres
        port: 5432
        database: cqdb
        sslmode: disable
providers:
    # provider configurations
    - name: aws
      configuration:
      # Optional, Repeated. Add an accounts block for every account you want to assume-role into and fetch data from.
      # accounts:
      #   - id: <UNIQUE ACCOUNT IDENTIFIER>
      # Optional. Role ARN we want to assume when accessing this account
      #     role_arn: < YOUR_ROLE_ARN >
      # Optional. Named profile in config or credential file from where CQ should grab credentials
      #     local_profile: < PROFILE_NAME >
      # Optional. by default assumes all regions
      # regions:
      #   - us-east-1
      #   - us-west-2
      # Optional. Enable AWS SDK debug logging.
      #   aws_debug: false
      # The maximum number of times that a request will be retried for failures. Defaults to 10 retry attempts.
      # max_retries: 10
      # The maximum back off delay between attempts. The backoff delays exponentially with a jitter based on the number of attempts. Defaults to 30 seconds.
      # max_backoff: 30
      #  
      # list of resources to fetch
      resources:
        - accessanalyzer.analyzers
        - acm.certificates
        - apigateway.api_keys
        - apigateway.client_certificates
        - apigateway.domain_names
        - apigateway.rest_apis
        - apigateway.usage_plans
        - apigateway.vpc_links
        - apigatewayv2.apis
        - apigatewayv2.domain_names
        - apigatewayv2.vpc_links
        - applicationautoscaling.policies
        - athena.data_catalogs
        - athena.work_groups
        - autoscaling.groups
        - autoscaling.launch_configurations
        - autoscaling.scheduled_actions
        - aws.regions
        - backup.global_settings
        - backup.plans
        - backup.region_settings
        - backup.vaults
        - cloudformation.stacks
        - cloudfront.cache_policies
        - cloudfront.distributions
        - cloudtrail.trails
        - cloudwatch.alarms
        - cloudwatchlogs.filters
        - codebuild.projects
        - codepipeline.pipelines
        - codepipeline.webhooks
        - cognito.identity_pools
        - cognito.user_pools
        - config.configuration_recorders
        - config.conformance_packs
        - dax.clusters
        - directconnect.connections
        - directconnect.gateways
        - directconnect.lags
        - directconnect.virtual_gateways
        - directconnect.virtual_interfaces
        - dms.replication_instances
        - dynamodb.tables
        - ec2.byoip_cidrs
        - ec2.customer_gateways
        - ec2.ebs_snapshots
        - ec2.ebs_volumes
        - ec2.egress_only_internet_gateways
        - ec2.eips
        - ec2.flow_logs
        - ec2.hosts
        - ec2.images
        - ec2.instance_statuses
        - ec2.instance_types
        - ec2.instances
        - ec2.internet_gateways
        - ec2.nat_gateways
        - ec2.network_acls
        - ec2.network_interfaces
        - ec2.regional_config
        - ec2.route_tables
        - ec2.security_groups
        - ec2.subnets
        - ec2.transit_gateways
        - ec2.vpc_endpoint_service_configurations
        - ec2.vpc_endpoint_services
        - ec2.vpc_endpoints
        - ec2.vpc_peering_connections
        - ec2.vpcs
        - ec2.vpn_gateways
        - ecr.repositories
        - ecs.clusters
        - ecs.task_definitions
        - efs.filesystems
        - eks.clusters
        - elasticbeanstalk.application_versions
        - elasticbeanstalk.applications
        - elasticbeanstalk.environments
        - elasticsearch.domains
        - elbv1.load_balancers
        - elbv2.load_balancers
        - elbv2.target_groups
        - emr.block_public_access_configs
        - emr.clusters
        - fsx.backups
        - glue.databases
        - glue.jobs
        - glue.workflows
        - guardduty.detectors
        - iam.accounts
        - iam.groups
        - iam.openid_connect_identity_providers
        - iam.password_policies
        - iam.policies
        - iam.roles
        - iam.saml_identity_providers
        - iam.server_certificates
        - iam.users
        - iam.virtual_mfa_devices
        - iot.billing_groups
        - iot.ca_certificates
        - iot.certificates
        - iot.policies
        - iot.streams
        - iot.thing_groups
        - iot.thing_types
        - iot.things
        - iot.topic_rules
        - kinesis.data_streams
        - kms.keys
        - lambda.functions
        - lambda.layers
        - lambda.runtimes
        - lightsail.alarms
        - lightsail.buckets
        - lightsail.certificates
        - lightsail.container_services
        - lightsail.database_snapshots
        - lightsail.databases
        - lightsail.disks
        - lightsail.distributions
        - lightsail.instance_snapshots
        - lightsail.instances
        - lightsail.load_balancers
        - lightsail.static_ips
        - mq.brokers
        - organizations.accounts
        - qldb.ledgers
        - rds.certificates
        - rds.cluster_parameter_groups
        - rds.cluster_snapshots
        - rds.clusters
        - rds.db_parameter_groups
        - rds.db_security_groups
        - rds.db_snapshots
        - rds.db_subnet_groups
        - rds.event_subscriptions
        - rds.instances
        - redshift.clusters
        - redshift.event_subscriptions
        - redshift.subnet_groups
        - route53.domains
        - route53.health_checks
        - route53.hosted_zones
        - route53.reusable_delegation_sets
        - route53.traffic_policies
        - s3.accounts
        - s3.buckets
        - sagemaker.endpoint_configurations
        - sagemaker.models
        - sagemaker.notebook_instances
        - sagemaker.training_jobs
        - secretsmanager.secrets
        - ses.templates
        - shield.attacks
        - shield.protections
        - shield.protections_groups
        - shield.subscriptions
        - sns.subscriptions
        - sns.topics
        - sqs.queues
        - ssm.documents
        - ssm.instances
        - waf.rule_groups
        - waf.rules
        - waf.subscribed_rule_groups
        - waf.web_acls
        - wafregional.rate_based_rules
        - wafregional.rule_groups
        - wafregional.rules
        - wafregional.web_acls
        - wafv2.ipsets
        - wafv2.managed_rule_groups
        - wafv2.regex_pattern_sets
        - wafv2.rule_groups
        - wafv2.web_acls
        - workspaces.directories
        - workspaces.workspaces
        - xray.encryption_config
        - xray.groups
        - xray.sampling_rules
    - name: azure
      configuration:
      # Optional. if you not specified, cloudquery tries to access all subscriptions available to tenant
      # subscriptions:
      #   - "<YOUR_SUBSCRIPTION_ID_HERE>"
      #  
      # list of resources to fetch
      resources:
        - account.locations
        - authorization.role_assignments
        - authorization.role_definitions
        - batch.accounts
        - compute.disks
        - compute.virtual_machine_scale_sets
        - compute.virtual_machines
        - container.managed_clusters
        - container.registries
        - cosmosdb.accounts
        - cosmosdb.mongodb_databases
        - cosmosdb.sql_databases
        - datalake.analytics_accounts
        - datalake.storage_accounts
        - eventhub.namespaces
        - frontdoor.front_doors
        - iothub.hubs
        - keyvault.managed_hsm
        - keyvault.vaults
        - logic.app_workflows
        - mariadb.servers
        - monitor.activity_log_alerts
        - monitor.activity_logs
        - monitor.diagnostic_settings
        - monitor.log_profiles
        - mysql.servers
        - network.express_route_circuits
        - network.express_route_gateways
        - network.express_route_ports
        - network.interfaces
        - network.public_ip_addresses
        - network.route_filters
        - network.route_tables
        - network.security_groups
        - network.virtual_networks
        - network.watchers
        - postgresql.servers
        - redis.services
        - resources.groups
        - resources.links
        - resources.policy_assignments
        - search.services
        - security.assessments
        - security.auto_provisioning_settings
        - security.contacts
        - security.jit_network_access_policies
        - security.pricings
        - security.settings
        - servicebus.namespaces
        - sql.managed_instances
        - sql.servers
        - storage.accounts
        - streamanalytics.jobs
        - subscription.subscriptions
        - web.apps
    - name: gcp
      configuration:
      # Optional. List of folders to get projects from. Required permission: resourcemanager.projects.list
      # folder_ids:
      #   - "organizations/<ORG_ID>"
      #   - "folders/<FOLDER_ID>"
      # Optional. Maximum level of folders to recurse into
      # folders_max_depth: 5
      # Optional. If not specified either using all projects accessible.
      # project_ids:
      #   - "<CHANGE_THIS_TO_YOUR_PROJECT_ID>"
      # Optional. ServiceAccountKeyJSON passed as value instead of a file path, can be passed also via env: CQ_SERVICE_ACCOUNT_KEY_JSON
      # service_account_key_json: <YOUR_JSON_SERVICE_ACCOUNT_KEY_DATA>
      # Optional. GRPC Retry/backoff configuration, time units in seconds. Documented in https://github.com/grpc/grpc/blob/master/doc/connection-backoff.md
      # backoff_base_delay: 1
      # backoff_multiplier: 1.6
      # backoff_max_delay: 120
      # backoff_jitter: 0.2
      # backoff_min_connect_timeout = 0
      # Optional. Max amount of retries for retrier, defaults to max 3 retries.
      # max_retries: 3
      #  
      # list of resources to fetch
      resources:
        - bigquery.datasets
        - cloudbilling.accounts
        - cloudbilling.services
        - cloudfunctions.functions
        - cloudrun.services
        - compute.addresses
        - compute.autoscalers
        - compute.backend_services
        - compute.disk_types
        - compute.disks
        - compute.firewalls
        - compute.forwarding_rules
        - compute.images
        - compute.instance_groups
        - compute.instances
        - compute.interconnects
        - compute.networks
        - compute.projects
        - compute.ssl_certificates
        - compute.ssl_policies
        - compute.subnetworks
        - compute.target_http_proxies
        - compute.target_https_proxies
        - compute.target_ssl_proxies
        - compute.url_maps
        - compute.vpn_gateways
        - dns.managed_zones
        - dns.policies
        - domains.registrations
        - iam.project_roles
        - iam.service_accounts
        - kms.keys
        - kubernetes.clusters
        - logging.metrics
        - logging.sinks
        - memorystore.redis_instances
        - monitoring.alert_policies
        - resource_manager.folders
        - resource_manager.projects
        - security.secrets
        - sql.instances
        - storage.buckets
        - storage.metrics
